#!/bin/bash

# Script to generate API configuration at build time
# This script is called during the build process to inject the API key securely

set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
CONFIG_DIR="$PROJECT_DIR/Brixie/Configuration/Generated"

# Create the generated configuration directory if it doesn't exist
mkdir -p "$CONFIG_DIR"

# Define the output file
OUTPUT_FILE="$CONFIG_DIR/GeneratedConfiguration.swift"

# Check for .env file first
if [ -f "$PROJECT_DIR/.env" ]; then
    echo "Loading environment from .env file..."
    source "$PROJECT_DIR/.env"
fi

# Get API key from environment variable (could be from .env or system env)
API_KEY="${REBRICKABLE_API_KEY:-}"

if [ -n "$API_KEY" ]; then
    echo "Generating build configuration with embedded API key..."
    cat > "$OUTPUT_FILE" << EOF
// GENERATED FILE - DO NOT EDIT
// This file is automatically generated during build time
// Generated on: $(date -u +"%Y-%m-%d %H:%M:%S UTC")

import Foundation

struct GeneratedConfiguration {
    static let rebrickableAPIKey: String? = "$API_KEY"
    static let hasEmbeddedAPIKey = true
    static let buildDate = "$( date -u +"%Y-%m-%d %H:%M:%S UTC" )"
}
EOF
    echo "✅ API configuration generated successfully"
else
    echo "⚠️  No REBRICKABLE_API_KEY environment variable found"
    echo "Generating build configuration without embedded API key..."
    cat > "$OUTPUT_FILE" << EOF
// GENERATED FILE - DO NOT EDIT  
// This file is automatically generated during build time
// Generated on: $(date -u +"%Y-%m-%d %H:%M:%S UTC")

import Foundation

struct GeneratedConfiguration {
    static let rebrickableAPIKey: String? = nil
    static let hasEmbeddedAPIKey = false
    static let buildDate = "$( date -u +"%Y-%m-%d %H:%M:%S UTC" )"
}
EOF
    echo "⚠️  API configuration generated without embedded key"
fi

echo "Configuration file created at: $OUTPUT_FILE"