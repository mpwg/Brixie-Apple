name: CI Builds

permissions:
  contents: read

on:
  push:
    branches: [main, docs/*]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        buildname: [macOS]
        include:
          - destination: generic/platform=macOS
            buildname: macOS
          - destination: generic/platform=iOS
            buildname: iOS
          - os: macos-latest
          - xcode: latest
          - xcpretty: '0.3.0'
    name: Build - ${{matrix.buildname}} on ${{ matrix.os }}
    runs-on:  ${{ matrix.os }}
    steps:
      - name: Setup Xcode ${{ matrix.xcode }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode }}
          
      - name: Checkout Repository
        uses: actions/checkout@v5
        
      - name: Install xcpretty
        run: |
          gem install xcpretty -v ${{ matrix.xcpretty }}
        
      - name: Show Xcode Version
        run: xcodebuild -version

      - name: Cache Swift Package Manager
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build ${{matrix.buildname}} App
        run: |
          echo "üî® Build - ${{matrix.buildname}} on ${{ matrix.os }}..."
          set -o pipefail
          if xcodebuild -project Brixie.xcodeproj -scheme Brixie \
            -destination ${{matrix.destination}} \
            build CODE_SIGNING_ALLOWED=NO | xcpretty; then
            echo "‚úÖ Build completed successfully"
          else
            echo "‚ùå Build failed"
            exit 1
          fi
