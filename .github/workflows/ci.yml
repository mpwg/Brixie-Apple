name: CI

permissions:
  contents: read

on:
  push:
    branches:
      - main
      - develop
      - "release/**"
      - "hotfix/**"
  pull_request:
    branches:
      - main
      - develop
      - "release/**"

jobs:
  lint:
    name: Code Quality (SwiftLint)
    runs-on: macos-26
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint lint --config .swiftlint.yml --strict

  build:
    name: Build - ${{ matrix.platform }}
    runs-on: macos-26
    strategy:
      matrix:
        platform: [iOS, macOS]
        include:
          - platform: iOS
            lane: build_ios
          - platform: macOS
            lane: build_macos
    environment: IntegrationTests
    env:
      # Load Fastlane / Apple credentials from repository secrets
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPSTORE_TEAM_ID: ${{ secrets.APPSTORE_TEAM_ID }}
      APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
      APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_GITHUB_ISSUES: 1
      FASTLANE_HIDE_CHANGELOG: 1
      DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      REBRICKABLE_API_KEY: ${{ secrets.REBRICKABLE_API_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true

      - name: Bundle install
        run: |
          bundle install

      - name: Show Build Environment
        run: |
          echo "üîç Build Environment Info:"
          echo "Platform: ${{ matrix.platform }}"
          echo "Lane: ${{ matrix.lane }}"
          echo "Xcode Version: $(xcodebuild -version)"
          if [ -n "$REBRICKABLE_API_KEY" ]; then
            echo "‚úÖ API Key: Present"
          else
            echo "‚ùå API Key: Missing"
          fi
          echo ""

      - name: Build App with Fastlane
        run: |
          echo "üöÄ Building ${{ matrix.platform }} app using Fastlane..."
          bundle exec fastlane ios ${{ matrix.lane }}

  test:
    name: Test - ${{ matrix.platform }}
    runs-on: macos-26
    needs: build
    strategy:
      matrix:
        platform: [iOS, macOS]
        include:
          - platform: iOS
            lane: test_ios
          - platform: macOS
            lane: test_macos
    environment: IntegrationTests
    env:
      # Load Fastlane / Apple credentials from repository secrets
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPSTORE_TEAM_ID: ${{ secrets.APPSTORE_TEAM_ID }}
      APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
      APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      FASTLANE_SKIP_UPDATE_CHECK: 1
      FASTLANE_HIDE_GITHUB_ISSUES: 1
      FASTLANE_HIDE_CHANGELOG: 1
      DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      REBRICKABLE_API_KEY: ${{ secrets.REBRICKABLE_API_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true

      - name: Bundle install
        run: |
          bundle install

      - name: Run Tests with Fastlane
        run: |
          echo "üß™ Running ${{ matrix.platform }} tests using Fastlane..."
          bundle exec fastlane ios ${{ matrix.lane }}
